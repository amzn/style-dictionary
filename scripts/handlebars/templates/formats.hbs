# Formats

Formats are one of the ways to create files that act as interfaces for your style dictionary. For example, you want to be able to
use your style dictionary in CSS. You can use the `css/variables` template which will create a CSS file with variables from
your style dictionary. You can define custom formats with the [`registerFormat`](api.md#registerformat).

Templates and Formats serve the same purpose: use your style dictionary as data to build a file. You use formats in your config
file under platforms > [platform] > files > [file]

```json
{
  "source": ["properties/**/*.json"],
  "platforms": {
    "css": {
      "transformGroup": "css",
      "files": [
        {
          "template": "css/variables",
          "destination": "variables.css"
        }
      ]
    }
  }
}
```


>*__How are Templates different than Formats?__*

>Mainly syntactic sugar; anything you can do in a Template you can do in a Format. Use whichever is easier for you to write. We find
that Templates are good if you have a lot of boilerplate code around where the style dictionary will go (like writing ObjectiveC files).
Formats are better if there is little to no boilerplate code like a flat SCSS variables file.

----

## Pre-defined Formats

[lib/common/formats.js](https://github.com/amzn/style-dictionary/blob/master/lib/common/formats.js)

{{#namespace name="Formats"}}
{{>members~}}
{{/namespace}}
